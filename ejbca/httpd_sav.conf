#
# Sample Apache httpd configuration demonstrating health check and basic config
# for rolling application upgrades without downtime.
#
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so
LoadModule watchdog_module modules/mod_watchdog.so
LoadModule headers_module modules/mod_headers.so
LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule rewrite_module modules/mod_rewrite.so
<IfModule unixd_module>
    User daemon
    Group daemon
</IfModule>
ErrorLog /proc/self/fd/2
LogLevel notice
ServerTokens Prod
ServerRoot /usr/local/apache2
<Directory />
    AllowOverride none
    Require all denied
</Directory>
ProxyRequests off
# Disallow any HTTP method that is not HEAD, GET, PUT or POST
RewriteEngine On
RewriteCond %{REQUEST_METHOD} !^(HEAD|GET|PUT|POST)$ [NC]
RewriteRule .* - [F,L]
# EJBCA's web based UIs keep state server side for many operations, so we like
# each client to end up on the same node for as long as it is available
Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED
ProxyHCTemplate connected hcmethod=TCP hcinterval=1 hcpasses=3 hcfails=1
# We can't check the real EJBCA health check response when AJP is used, but for HTTP it would be
#ProxyHCTemplate healthy hcmethod=GET hcinterval=1 hcpasses=1 hcfails=1 hcuri=/ejbca/publicweb/healthcheck/ejbcahealth
ProxyHCTemplate healthy hcmethod=TCP hcinterval=1 hcpasses=10 hcfails=1
<Proxy balancer://ejbca-cluster-connected>
    # It is sufficient that the node is up in order to allow management and troubleshooting
    BalancerMember "ajp://ca1:8009/" keepalive=On ping=500ms retry=1 route=1 hctemplate=connected
    BalancerMember "ajp://ca2:8009/" keepalive=On ping=500ms retry=1 route=2 hctemplate=connected
    ProxySet stickysession=ROUTEID
</Proxy>
<Proxy balancer://ejbca-cluster-healthy>
    # Ideally: require the node respond positively to health-check before an application back-end is considered suitable to serve requests
    # But since we are using AJP, the connection checker will have to do
    BalancerMember "ajp://ca1:8009/" keepalive=On ping=500ms retry=1 route=1 hctemplate=healthy
    BalancerMember "ajp://ca2:8009/" keepalive=On ping=500ms retry=1 route=2 hctemplate=healthy
    ProxySet stickysession=ROUTEID
</Proxy>
Listen 80
<VirtualHost *:80>
    # Always expose application health-check of a connected node to allow troubleshooting
    <Location /ejbca/publicweb/healthcheck/ejbcahealth>
        ProxyPass "balancer://ejbca-cluster-connected/ejbca/publicweb/healthcheck/ejbcahealth"
    </Location>
    AllowEncodedSlashes On
    ProxyPass "/" "balancer://ejbca-cluster-healthy/"
    # Always expose application admin interface and health-check of a connected node to allow troubleshooting
    <Location /ejbca/adminweb>
        # Uncomment this if you only ever will use client certificate authentication for management
        #SSLVerifyClient require
        ProxyPass "balancer://ejbca-cluster-connected/ejbca/adminweb"
    </Location>
    <Location /ejbca/publicweb/healthcheck/ejbcahealth>
        ProxyPass "balancer://ejbca-cluster-connected/ejbca/publicweb/healthcheck/ejbcahealth"
    </Location>
    AllowEncodedSlashes On
    ProxyPass "/" "balancer://ejbca-cluster-healthy/"
</VirtualHost>