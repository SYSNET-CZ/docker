version: "3"
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: es01
    restart: always
    environment:
      - node.name=es01
      - cluster.name=sysnet-eap
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "path.repo=/usr/share/elasticsearch/backup"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
      - backup_7:/usr/share/elasticsearch/backup
    ports:
      - "127.0.0.1:9200:9200"
    networks:
      elastic:
        aliases:
          - es01
          - elasticsearch
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: es02
    restart: always
    environment:
      - node.name=es02
      - cluster.name=sysnet-eap
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "path.repo=/usr/share/elasticsearch/backup"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
      - backup_7:/usr/share/elasticsearch/backup
    networks:
      elastic:
        aliases:
          - es02
          - elasticsearch2
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: es03
    restart: always
    environment:
      - node.name=es03
      - cluster.name=sysnet-eap
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "path.repo=/usr/share/elasticsearch/backup"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
      - backup_7:/usr/share/elasticsearch/backup
    networks:
      elastic:
        aliases:
          - es03
          - elasticsearch3
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    restart: always
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      SERVER_NAME: ${SERVER_NAME}
      ELASTICSEARCH_HOSTS: http://es01:9200
    ports:
      - "127.0.0.1:5601:5601"
    networks:
      elastic:
        aliases:
          - kibana
          - kib
    depends_on:
      - "es01"

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: logstash
    links:
      - es01
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./logstash/conf/:/usr/share/logstash/config/
      - ./logstash/logs/:/usr/share/logstash/logs/
    ports:
      - "10514:10514"
    networks:
      elastic:
        aliases:
          - logstash
          - syslog
    #command: logstash -f /usr/share/logstash/config/logstash.conf
    depends_on:
      - "es01"

  apm:
    image: docker.elastic.co/apm/apm-server:${ELK_VERSION}
    container_name: apm
    restart: always
    networks:
      elastic:
        aliases:
          - apm
          - apm-server
    environment:
      - TZ=Europe/Prague
    ports:
      - "127.0.0.1:8200:8200"
    volumes:
      - ./apm/conf/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    depends_on:
      - es01
      - kibana

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  backup_7:
    driver: local

networks:
  elastic:
    driver: bridge
